# insert it after the line alias history="history 0"
# make less more friendly for non-text input files, see lesspipe(1)
#[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# set variable identifying the chroot you work in (used in the prompt below)
## if [ -z "${debian_chroot:-}" ] && [ -r /etc/debian_chroot ]; then
##    debian_chroot=$(cat /etc/debian_chroot)
##fi

# set a fancy prompt (non-color, unless we know we "want" color)
##case "$TERM" in
##    xterm-color|*-256color) color_prompt=yes;;
##esac

# uncomment for a colored prompt, if the terminal has the capability; turned
# off by default to not distract the user: the focus in a terminal window
# should be on the output of commands, not on the prompt
## force_color_prompt=yes

##if [ -n "$force_color_prompt" ]; then
##    if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
        # We have color support; assume it's compliant with Ecma-48
        # (ISO/IEC-6429). (Lack of such support is extremely rare, and such
        # a case would tend to support setf rather than setaf.)
##        color_prompt=yes
##    else
##        color_prompt=
##    fi
##fi

# prompt ㉿ λ 🐧  
##if [ "$color_prompt" = yes ]; then
##    PROMPT=$'%F{%(#.white.red)}${debian_chroot:+($debian_chroot)}❰%B%F{%(#.red.white)}%n%(#.💀.(💀))%m%b%F{%(#.blue.red)}❱ {%B%F{reset}%(6~.%-1~/…/%4~.%5~)%b%F{%(#.blue.red)}}\n%B%(#.%F{red}#.%F{blue}->)%b%F{reset} '
##    RPROMPT=$'%(?.. %? %F{red}%B⨯%b%F{reset})%(1j. %j %F{white}%B⚙%b%F{reset}.)'

##else
##    PROMPT='${debian_chroot:+($debian_chroot)}%n@%m:%~%# '
##fi
##unset color_prompt force_color_prompt

# If this is an xterm set the title to user@host:dir
##case "$TERM" in
##xterm*|rxvt*)
##    TERM_TITLE='\e]0;${debian_chroot:+($debian_chroot)}%n@%m: %~\a'
##    ;;
##*)
##    ;;
##esac

##new_line_before_prompt=yes
##precmd() {
    # Print the previously configured title
##    print -Pn "$TERM_TITLE"

    # Print a new line before the prompt, but only if it is not the first line
##    if [ "$new_line_before_prompt" = yes ]; then
##        if [ -z "$_NEW_LINE_BEFORE_PROMPT" ]; then
##            _NEW_LINE_BEFORE_PROMPT=1
##        else
##            print ""
##        fi
##    fi
##}

